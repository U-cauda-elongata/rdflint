import com.github.spotbugs.SpotBugsTask

plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
    id "com.github.spotbugs" version "1.6.9"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}
dependencies {
    compile 'org.apache.jena:jena-arq:3.9.0'
    compile 'commons-cli:commons-cli:1.4'
    compile 'org.jline:jline:3.9.0'
    compile 'org.yaml:snakeyaml:1.23'
    compile 'org.codehaus.groovy:groovy:2.5.4'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'
    compile 'org.reflections:reflections:0.9.11'
    compile 'com.github.albfernandez:juniversalchardet:2.3.0'
    compile group: 'org.topbraid', name: 'shacl', version: '1.3.0'

    testCompile 'junit:junit:4.+'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:3.1.0'
}
jar {
    manifest {
        attributes 'Main-Class': 'com.github.imas.rdflint.RdfLint'
    }
}
artifacts {
    archives shadowJar
}

checkstyle {
    toolVersion '8.16'
}
pmd {
    toolVersion '6.10.0'
    sourceSets = [sourceSets.main]
    ruleSets = [
            "category/java/bestpractices.xml",
            "category/java/multithreading.xml",
            "category/java/performance.xml",
            "category/java/security.xml"
    ]
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
build.dependsOn jacocoTestReport, jacocoTestCoverageVerification
jacocoTestCoverageVerification.mustRunAfter jacocoTestReport
